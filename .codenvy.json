{
  "v": "4.0",
  "workspace": {
    "environments": {
      "default": {
        "machines": {
          "dev-machine": {
            "agents": [
              "org.eclipse.che.terminal",
              "org.eclipse.che.ws-agent",
              "org.eclipse.che.ssh"
            ],
            "servers": {},
            "attributes": {
              "memoryLimitBytes": "2147483648"
            }
          },
          "mongodb": {
            "agents": [
              "org.eclipse.che.terminal",
              "org.eclipse.che.ssh"
            ],
            "servers": {},
            "attributes": {}
          }
        },
        "recipe": {
          "content": "services:\n dev-machine:\n  image: arecio/express-unify\n  command: tail -f /dev/null\n mongodb:\n  image: 'arecio/mongodb:latest'\n  mem_limit: 1073741824\n  command: nami start --foreground mongodb",
          "contentType": "application/x-yaml",
          "type": "compose"
        }
      }
    },
    "name": "default",
    "defaultEnv": "default",
    "projects": [
      {
        "name": "express",
        "type": "node-js",
        "path": "/express",
        "source": {
          "type": "git",
          "location": "https://github.com/bitnami/bitnami-docker-che-blank-sample.git",
          "parameters": {
            "keepVcs": "false"
          }
        },
        "mixins": [
          "pullrequest"
        ],
        "attributes": {
          "local_branch": ["contrib"],
          "contribute_to_branch": ["master"]
        },
        "modules": [],
        "problems": []
      }
    ],
    "commands": [
      {
        "name": "2. Stop",
        "type": "custom",
        "commandLine": "print-help && cd ${current.project.path} && pkill -u bitnami node && echo \"Web server stopped.\"",
        "attributes": {}
      },
      {
        "name": "3. Run",
        "type": "custom",
        "commandLine": "print-help && cd ${current.project.path} && npm start",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      },
      {
        "name": "1. Create and run project",
        "type": "custom",
        "commandLine": "print-help && cd ${current.project.path} && nami initialize express && cp -r /dist/samples . && nami execute express generateProject --projectDir /projects --force $(basename ${current.project.path}) && npm install mongodb@2.1.18 --save && npm install && counter=0; until nc -z mongodb 27017; do counter=$((counter+1)); if [ $counter == 10 ]; then echo \"Error: Couldn't connect to MongoDB.\"; exit 1; fi; echo \"Trying to connect to MongoDB at mongodb. Attempt $counter.\"; sleep 5; done; echo \"Connected to MongoDB database. Starting application server.\" && npm start",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      }
    ]
  },
  "ide": {
    "onProjectsLoaded": {
      "actions": [
        {
          "id": "runCommand",
          "properties": {
            "name": "1. Create and run project"
          }
        }
      ]
    }
  }
}
